an alphebet is just a series of symbols
a string is a lit of these symbols

sigma* is a set of all possiable strings
a language is a subset of all possiable string

Grammar is a set of rules the genorates a language

example:
  language: set of all signed decimal ints
  grammar: optional "+" or "-" followed by 1 or more digits

Cat, Dog, rat language
Terminals (tokens): a, the, dog, cat, rat, love, hates, eats
non-terminals: <A> <V> <VP> <NP> <N> <S>
reduction rules: basically how the Parse tree is formed
start symbol: <S>

starting a <S> and then just substitutaion from these
Parse Tree shows the seporations from substitution

//check printed notes for drawings and comments

when writing language and grammar:
  start by writing out all termainals (see slide 7)
  then write out the rules through nonterminals

a program is a file with a sequence of characters
  to make it useful we use Lexical Analsis and Parsing
    Lexical analysis checks to see what the all the characters are
    Parcing figures out what to do with the new data: "Phase structure"
